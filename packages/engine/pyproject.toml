[tool.poetry]
name        = "mockexchange"
version     = "0.1.0"
description = "Headless exchange emulator backed by Valkey (Redis fork)"
authors     = ["Didac Cristobal-Canals"]
homepage    = "https://github.com/didac-crst/mockexchange-api"

# Correct shape: an array of tables
packages = [
  { include = "core",      from = "src" },     # library
  { include = "api",       from = "src" }      # app layer
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"        # already enforces the interpreter version
redis    = "^5.0"
fastapi  = "^0.111"
uvicorn  = { extras = ["standard"], version = "^0.30" }
pydantic = "^2.6"
python-multipart = "^0.0.20"
pykka = "^3.1"
pandas = "^2.3"
numpy = ">=1.26.0,<2.0.0"

[tool.poetry.group.dev.dependencies]
pytest          = "^8.2"
pytest-asyncio  = "^0.23"
pytest-cov      = "^5.0"
ruff            = "*"
mypy            = "^1.10"
pytest-dotenv   = "^0.5.2"
hypothesis      = "^6.100"
httpx           = "^0.27"

[tool.poetry.scripts]
# short, easy to type
mockx             = "api.cli:main"
# keep the old alias if someone already relies on it
mockexchange-cli  = "api.cli:main"
# ASGI app for uvicorn/gunicorn
mockexchange-api  = "api.server:app"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config"
]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter when possible)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E731",  # lambda assigned to name (refactor later)
    "UP040", # TypeAlias -> `type` keyword (refactor later)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[build-system]
requires      = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
