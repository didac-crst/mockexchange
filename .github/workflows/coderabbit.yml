name: CodeRabbit Integration

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  coderabbit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          poetry install
          cd packages/engine && poetry install
          cd ../oracle && poetry install
          cd ../periscope && poetry install

      - name: Run tests for affected packages
        run: |
          set -e
          BEFORE="${{ github.event.before || 'HEAD^' }}"
          AFTER="${{ github.sha }}"
          if git diff --name-only "$BEFORE" "$AFTER" | grep -q "packages/engine"; then
            echo "Testing engine package..."; cd packages/engine && poetry run pytest -v; cd - >/dev/null
          fi
          if git diff --name-only "$BEFORE" "$AFTER" | grep -q "packages/oracle"; then
            echo "Testing oracle package..."; cd packages/oracle && poetry run pytest -v; cd - >/dev/null
          fi
          if git diff --name-only "$BEFORE" "$AFTER" | grep -q "packages/periscope"; then
            echo "Testing periscope package..."; cd packages/periscope && poetry run pytest -v; cd - >/dev/null
          fi

      - name: Run linting
        run: |
          poetry run ruff check .
          poetry run black --check .

      - name: CodeRabbit AI Code Review
        uses: coderabbitai/coderabbit-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # coderabbit_token: ${{ secrets.CODERABBIT_TOKEN }} # only if your plan needs it