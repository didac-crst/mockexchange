name: Integration Tests

on:
  workflow_dispatch: {}

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: |
          set -e
          poetry install
          cd packages/engine && poetry install
          cd ../oracle && poetry install
          cd ../periscope && poetry install

      - name: Start services
        run: |
          docker run -d --name mockx-valkey -p 6379:6379 valkey/valkey:7-alpine --requirepass testpass
          # Wait for Valkey to be ready
          for i in {1..60}; do
            if docker exec mockx-valkey sh -lc 'valkey-cli -a testpass ping' 2>/dev/null | grep -q PONG; then
              echo "Valkey is ready"
              break
            fi
            echo "Waiting for Valkey… ($i)"
            sleep 1
          done
          # Fail if not ready
          docker exec mockx-valkey sh -lc 'valkey-cli -a testpass ping' 2>/dev/null | grep -q PONG
          cd packages/engine
          poetry run uvicorn api.server:app --host 0.0.0.0 --port 8000 &
          echo "UVICORN_PID=$!" >> "$GITHUB_ENV"
          # Wait for engine HTTP readiness
          for i in {1..60}; do
            if curl -sf -o /dev/null http://127.0.0.1:8000/ || curl -sf -o /dev/null http://127.0.0.1:8000/health || curl -sf -o /dev/null http://127.0.0.1:8000/docs; then
              echo "Engine API is ready"
              break
            fi
            echo "Waiting for Engine API… ($i)"
            sleep 1
          done
          cd ../..

      - name: Run integration tests
        run: |
          cd packages/engine
          poetry run pytest tests/integration/ -v
          cd ../..

      - name: Cleanup
        if: always()
        run: |
          docker stop mockx-valkey || true
          docker rm mockx-valkey || true
          if [ -n "${UVICORN_PID:-}" ]; then
            kill "${UVICORN_PID}" 2>/dev/null || true
          fi
      - name: Run integration tests
        run: |
          cd packages/engine
          poetry run pytest tests/integration/ -v
          cd ../..

      - name: Cleanup
        if: always()
        run: |
          docker stop mockx-valkey || true
          docker rm mockx-valkey || true
